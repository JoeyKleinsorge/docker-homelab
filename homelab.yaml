version: '3.3'

########################### NETWORKS
networks:
  socket_proxy:
    external:
      name: socket_proxy
  default:
    driver: bridge

########################### SERVICES
services:
  # Traefik 2 - Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik:2.2.1 
    restart: unless-stopped
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.$PGID.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8082
      - --api=true
      - --log=true
      - --log.level=DEBUG 
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=101
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.$DOMAINNAME`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=socket_proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules
      - --providers.file.watch=true
      - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
    networks:
      - socket_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - target: 80
        published: 82
        protocol: tcp
        mode: host
      - target: 443
        published: 442
        protocol: tcp
        mode: host
      - target: 8080
        published: 8082
        protocol: tcp
        mode: host
    volumes:
      - $DOCKERDIR/traefik2/rules:/rules
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/traefik2/acme/acme.json:/acme.json
      - $DOCKERDIR/traefik2/traefik.log:/traefik.log
      - $DOCKERDIR/shared:/shared
    environment:
      - CF_API_EMAIL=$CLOUDFLARE_EMAIL
      - CF_API_KEY=$CLOUDFLARE_API_KEY
    labels:
      - 'traefik.enable=true'
      # HTTP-to-HTTPS Redirect
      - 'traefik.http.routers.http-catchall.entrypoints=http'
      - 'traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      # HTTP Routers
      - 'traefik.http.routers.traefik-rtr.entrypoints=https'
      - 'traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME`)'
      - 'traefik.http.routers.traefik-rtr.tls=true'
      - 'traefik.http.routers.traefik-rtr.tls.domains[0].main=$DOMAINNAME'
      - 'traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.$DOMAINNAME'
      ## Services - API
      - 'traefik.http.routers.traefik-rtr.service=api@internal'
      ## Middlewares
      - 'traefik.http.routers.traefik-rtr.middlewares=chain-basic-auth@file'
      - 'traefik.http.middlewares.traefik-headers.headers.accesscontrolallowmethods=GET, OPTIONS, PUT'
      - 'traefik.http.middlewares.traefik-headers.headers.accesscontrolalloworiginlist=https://$DOMAINNAME'
      - 'traefik.http.middlewares.traefik-headers.headers.accesscontrolmaxage=100'
      - 'traefik.http.middlewares.traefik-headers.headers.addvaryheader=true'
      - 'traefik.http.middlewares.traefik-headers.headers.allowedhosts=traefik.$DOMAINNAME'
      - 'traefik.http.middlewares.traefik-headers.headers.hostsproxyheaders=X-Forwarded-Host'
      - 'traefik.http.middlewares.traefik-headers.headers.sslredirect=true'
      - 'traefik.http.middlewares.traefik-headers.headers.sslhost=traefik.$DOMAINNAME'
      - 'traefik.http.middlewares.traefik-headers.headers.sslforcehost=true'
      - 'traefik.http.middlewares.traefik-headers.headers.sslproxyheaders.X-Forwarded-Proto=https'
      - 'traefik.http.middlewares.traefik-headers.headers.stsseconds=63072000'
      - 'traefik.http.middlewares.traefik-headers.headers.stsincludesubdomains=true'
      - 'traefik.http.middlewares.traefik-headers.headers.stspreload=true'
      - 'traefik.http.middlewares.traefik-headers.headers.forcestsheader=true'
      - 'traefik.http.middlewares.traefik-headers.headers.framedeny=true'
      #      - "traefik.http.middlewares.traefik-headers.headers.customframeoptionsvalue=SAMEORIGIN" # This option overrides FrameDeny
      - 'traefik.http.middlewares.traefik-headers.headers.contenttypenosniff=true'
      - 'traefik.http.middlewares.traefik-headers.headers.browserxssfilter=true'
      #      - "traefik.http.middlewares.traefik-headers.headers.contentsecuritypolicy=frame-ancestors 'none'; object-src 'none'; base-uri 'none';"
      - 'traefik.http.middlewares.traefik-headers.headers.referrerpolicy=same-origin'
      - "traefik.http.middlewares.traefik-headers.headers.featurepolicy=camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
      - 'traefik.http.middlewares.traefik-headers.headers.customresponseheaders.X-Robots-Tag=none,noarchive,nosnippet,notranslate,noimageindex,'

  # Ghost - Open source blog
  ghost:
    image: ghost:latest
    container_name: ghost
    restart: unless-stopped
    networks:
      - socket_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/ghost/content:/var/lib/ghost/content
    ports:
      - $GHOST_PORT:2368
    environment:
      - url=https://$DOMAINNAME
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - 'traefik.enable=true'
      ## HTTP Routers
      - 'traefik.http.routers.ghost-rtr.entrypoints=https'
      - 'traefik.http.routers.ghost-rtr.rule=Host(`$DOMAINNAME`,`www.$DOMAINNAME`)'
      - 'traefik.http.routers.ghost-rtr.tls=true'
      ## Middlewares
      - 'traefik.http.routers.ghost-rtr.middlewares=chain-no-auth@file'
      ## HTTP Services
      - 'traefik.http.routers.ghost-rtr.service=ghost-svc'
      - 'traefik.http.services.ghost-svc.loadbalancer.server.port=$GHOST_PORT'

  # Unifi - Centralized network management
  unifi:
    image: linuxserver/unifi-controller:latest
    container_name: unifi
    restart: always
    volumes:
      - $DOCKERDIR/unifi:/var/lib/unifi
      - $DOCKERDIR/unifi:/config
    networks:
      - socket_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - 3478:3478/udp
      - 8080:8080/tcp
      - 8081:8081/tcp
      - 8443:8443/tcp
      - 8843:8843/tcp
      - 8880:8880/tcp
      - $UNIFI_PORT:8883/tcp
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - 'traefik.enable=true'
      ## HTTP Routers
      - 'traefik.http.routers.unifi-rtr.entrypoints=https'
      - 'traefik.http.routers.unifi-rtr.rule=Host(`unifi.$DOMAINNAME`)'
      - 'traefik.http.routers.unifi-rtr.tls=true'
      ## Middlewares
      - 'traefik.http.routers.unifi-rtr.middlewares=chain-no-auth@file'
      ## HTTP Services
      - 'traefik.http.routers.unifi-rtr.service=unifi-svc'
      - 'traefik.http.services.unifi-svc.loadbalancer.server.port=$UNIFI_PORT'

  # Portainer - WebUI for Containers
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock 
    networks:
      - socket_proxy
    ports:
      - '$PORTAINER_PORT:9000'
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro 
      - $DOCKERDIR/portainer:/data
    environment:
      - TZ=$TZ
    labels:
      - 'traefik.enable=true'
      ## HTTP Routers
      - 'traefik.http.routers.portainer-rtr.entrypoints=https'
      - 'traefik.http.routers.portainer-rtr.rule=Host(`monitor.$DOMAINNAME`)'
      - 'traefik.http.routers.portainer-rtr.tls=true'
      ## Middlewares
      - 'traefik.http.routers.portainer-rtr.middlewares=chain-no-auth@file' # No Authentication
      ## HTTP Services
      - 'traefik.http.routers.portainer-rtr.service=portainer-svc'
      - 'traefik.http.services.portainer-svc.loadbalancer.server.port=$PORTAINER_PORT'

  # VSCode - VSCode Editing
  vscode:
    image: codercom/code-server:latest
    container_name: vscode
    restart: always
    networks:
      - socket_proxy
    ports:
      - $VSC_PORT:8080
    volumes:
      - $DOCKERDIR:/home/coder/docker
      - $DOCKERDIR/vscode:/home/coder
    environment:
      - PASSWORD=$VSCODE_PASSWORD
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - DOCKER_HOST=tcp://socket-proxy:2375
    labels:
      - 'traefik.enable=true'
      ## HTTP Routers
      - 'traefik.http.routers.vsc-rtr.entrypoints=https'
      - 'traefik.http.routers.vsc-rtr.rule=Host(`vsc.$DOMAINNAME`)'
      ## Middlewares
      - 'traefik.http.routers.vsc-rtr.middlewares=chain-no-auth@file' 
      ## HTTP Services
      - 'traefik.http.routers.vsc-rtr.service=vsc-svc'
      - 'traefik.http.services.vsc-svc.loadbalancer.server.port=$VSC_PORT'      
    
  # Plex - Media Server
  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    restart: unless-stopped
    network_mode: 'host'
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/Plex:/config
      - $MEDIADIR:/media
      - /dev/shm:/transcode
    environment:
      - TZ=$TZ
      - HOSTNAME='DockerPlex'
      - PLEX_UID=$PUID
      - PLEX_GID=$PGID
      - ADVERTISE_IP=http://$SERVER_IP:32400/
      - PLEX_CLAIM=$PLEX_CLAIM
      - ALLOWED_NETWORKS=$PLEX_ALLOWED_NETWORKS

  # Heimdall - Unified HTPC/Home Server Web Interface
  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    restart: always
    volumes:
      - $DOCKERDIR/heimdall:/config
      - $DOCKERDIR/shared:/shared
    ports:
      - $HEIMDALL_PORT:80
      - $HEIMDALL_SECURE_PORT:443
    networks:
      - socket_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - 'traefik.enable=true'
      ## HTTP Routers
      - 'traefik.http.routers.heimdall-rtr.entrypoints=https'
      - 'traefik.http.routers.heimdall-rtr.rule=Host(`home.$DOMAINNAME`)'
      - 'traefik.http.routers.heimdall-rtr.tls=true'
      ## Middlewares
      - 'traefik.http.routers.heimdall-rtr.middlewares=chain-basic-auth@file'
      ## HTTP Services
      - 'traefik.http.routers.heimdall-rtr.service=heimdall-svc'
      - 'traefik.http.services.heimdall-svc.loadbalancer.server.port=80'

  # Tautulli (aka PlexPy) – Monitoring Plex Usage
  tautulli:
    image: linuxserver/tautulli:latest
    container_name: tautulli
    volumes:
      - $DOCKERDIR/tautulli/synology/config:/config
      - $DOCKERDIR/tautulli/synology/logs:/logs:ro
    ports:
      - $TAUTULLI_PORT:8181
    networks:
      - socket_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      - 'traefik.enable=true'
      ## HTTP Routers
      - 'traefik.http.routers.tautulli-rtr.entrypoints=https'
      - 'traefik.http.routers.tautulli-rtr.rule=Host(`tautulli.$DOMAINNAME`)'
      - 'traefik.http.routers.tautulli-rtr.tls=true'
      ## Middlewares
      - 'traefik.http.routers.tautulli-rtr.middlewares=chain-basic-auth@file'
      ## HTTP Services
      - 'traefik.http.routers.tautulli-rtr.service=tautulli-svc'
      - 'traefik.http.services.tautulli-svc.loadbalancer.server.port=8181'

  # Cloudflare DDNS - Dynamic DNS Updater
  cf-ddns:
    container_name: cf-ddns
    image: oznu/cloudflare-ddns:latest
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - socket_proxy
    environment:
      API_KEY: $CLOUDFLARE_API_TOKEN
      ZONE: $DOMAINNAME
      PROXIED: 'true'
      RRTYPE: A
      DELETE_ON_STOP: 'false'
      DNS_SERVER: 1.1.1.1
